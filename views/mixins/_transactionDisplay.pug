mixin transactionDisplay(transactions = {})
  - const categories = h.display.getCategories(transactions)
  - let group = ''
  - let incomeCatSums = []
  - let expenseCatSums = []
  each cat in categories
    //- display group name at beginning and when it switches to income
    - const catGroup = h.display.getGroup(transactions, cat)
    if catGroup !== group
      - group = catGroup
      h2= group

    h3= h.display.fixCategoryName(cat)
    - const catTrans = h.display.sortTransactions(h.display.getTransactions(transactions, cat)) //- sort transactions by date

    //- display transactions in current category
    table.table
      tr
        th Info
        th.price-cell Price
        th.date-cell Date
        th.edit-cell Edit
      each trans in catTrans
        tr
          td= trans.info
          td.right-cell= h.display.toPrice(trans.price)
          td.center-cell= h.display.formatTheDate(trans.date, 'ddd MMM D[,] YYYY')
          td
            a(href=`/transactions/${trans._id}/edit`).pencil
              != h.icon('pencil')
      tr.total
        td Total:
        - const catSum = h.maths.sumOfCategory(catTrans)
        td.right-cell= h.display.toPrice(catSum)
        td
        td
      if catGroup === 'income'
        - incomeCatSums.push(catSum)
      else if catGroup === 'expense'
        - expenseCatSums.push(catSum)
  - const totalExpense = h.maths.sumOfGroup(expenseCatSums)
  - const totalIncome = h.maths.sumOfGroup(incomeCatSums)
  p Total Expense: #{h.display.toPrice(totalExpense)}
  p Total Income: #{h.display.toPrice(totalIncome)}
  p Total Gain: #{h.display.toPrice(h.maths.difference(totalIncome, totalExpense))}